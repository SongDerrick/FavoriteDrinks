var app = require('../app'); // Requiring app.js file
var debug = require('debug')('backend:server');
var http = require('http'); // Requriring http module

var port = normalizePort(process.env.PORT || '3000');

// Getting port number from the given environent and store it. If port number is not given by the environment
// It is set to 3000

app.set('port', port); // Setting port

var server = http.createServer(app); // Http server created

server.listen(port); // Server listening on given port 
server.on('error', onError);
server.on('listening', onListening);

//Function that normalize Port number in the current environment

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }
  return false;
}

// Event lister for the server handling error event
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Event listener for the server, handling listening event
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
